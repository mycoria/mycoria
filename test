#!/bin/bash
set -euo pipefail

# Build for supported platforms.
echo "=> Building..."

# Get version.
VERSION="$(git tag --points-at)"
test -z "$VERSION" && VERSION="$(git describe --tags --abbrev=0)Â§devÂ§build"
LDFLAGS="-X main.Version=${VERSION}"

GOOS=linux GOARCH=amd64 go build -C cmd/mycoria -ldflags "$LDFLAGS" -o dist/mycoria_linux_amd64
GOOS=linux GOARCH=arm64 go build -C cmd/mycoria -ldflags "$LDFLAGS" -o dist/mycoria_linux_arm64
GOOS=windows GOARCH=amd64 go build -C cmd/mycoria -ldflags "$LDFLAGS" -o dist/mycoria_windows_amd64.exe
GOOS=windows GOARCH=arm64 go build -C cmd/mycoria -ldflags "$LDFLAGS" -o dist/mycoria_windows_arm64.exe
# GOOS=darwin GOARCH=amd64 go build -C cmd/mycoria
# GOOS=darwin GOARCH=arm64 go build -C cmd/mycoria

# Test version output.
echo "=> Reported Version:"
cmd/mycoria/dist/mycoria_linux_amd64 version

# Run linter.
echo "=> Linting... (golangci-lint)"
golangci-lint run || echo "=> Linter has warnings, continuing..."

# Run go vet
echo "=> Linting... (go vet)"
go vet ./...

# Run tests.
echo "=> Testing..."
go test ./...
